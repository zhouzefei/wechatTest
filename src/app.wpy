<style lang="less">
.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
}
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'

import { setStore } from 'wepy-redux'
import configStore from './store'

const store = configStore()
setStore(store)

export default class extends wepy.app {
  config = {
    pages: [
      'pages/index',
      'pages/joke',
      'pages/me'
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: '晴天说',
      navigationBarTextStyle: 'black'
    },
    tabBar: {
      "color": "#000000",
      "borderStyle": "#000",
      "selectedColor": "#9999FF",
      "list": [
        {
          "pagePath": "pages/index",
          "text": "天气",
          "iconPath": "images/pm.png",
          "selectedIconPath": "images/pm01.png"
        },
        {
          "pagePath": "pages/joke",
          "text": "笑话",
          "iconPath": "images/smail.png",
          "selectedIconPath": "images/smail01.png"
        },
        {
          "pagePath":"pages/me",
          "text": "谜语",
          "iconPath": "images/me.png",
          "selectedIconPath": "images/me_01.png"
        }
      ]
    }
  }

  globalData = {
    userInfo: null
  }

  constructor () {
    super()
    this.use('requestfix')
  }

  onLaunch() {
    this.testAsync()
  }

  sleep (s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved')
      }, s * 1000)
    })
  }

  async testAsync () {
    const data = await this.sleep(3)
    console.log(data)
  }

  getUserInfo(cb) {
    const that = this
    if (this.globalData.userInfo) {
      return this.globalData.userInfo
    }
    wepy.getUserInfo({
      success (res) {
        that.globalData.userInfo = res.userInfo
        cb && cb(res.userInfo)
      }
    })
  }
}
</script>
